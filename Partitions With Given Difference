https://www.codingninjas.com/codestudio/problems/partitions-with-given-difference_3751628?source=
youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0

given 
1-arr 2- d 
tell 
how many subsets are there in the array where having the difference as d;

1st approch 
Momoizationa approch

int mod = (int)1e9+7;
int f(int idx,vector<int> &a,vector<vector<int>> &dp,int tar){
    if(idx==0){
        if(a[0]==0 && tar==0) return 2;
        if(tar==0||tar==a[idx]) return 1;
        return 0;
    }
    if(dp[idx][tar]!=-1) return dp[idx][tar];
    int np = f(idx-1,a,dp,tar);
    int p = 0;
    if(a[idx]<=tar) p = f(idx-1,a,dp,tar-a[idx]);
    return dp[idx][tar] = (p+np)%mod;
}

int findways(vector<int> a,int tar){
    int n = a.size();
    vector<vector<int>> dp(n,vector<int>(tar+1,-1));
    return f(n-1,a,dp,tar);
}

int countPartitions(int n, int d, vector<int> &arr) {
   int tsum = 0;
    for(auto x:arr){tsum+=x;}
    if(tsum-d<0||(tsum-d)%2){return 0;}
    return  findways(arr,(tsum-d)/2);
}



tabulation approch
int mod = (int)1e9+7;
int findways(vector<int> a,int tar){
    int n = a.size();
    vector<vector<int>> dp(n,vector<int>(tar+1,0));
    if(a[0]==0) dp[0][0]=2;
    else dp[0][0] = 1;
    if(a[0]!=0 && a[0]<=tar) dp[0][a[0]] = 1;
    for(int i = 1;i<n;i++){
        for(int j = 0;j<=tar;j++){
            int np = dp[i-1][j];
            int p = 0;
            if(j>=a[i]){ p = dp[i-1][j-a[i]];}
            dp[i][j] = (p+np)%mod;
        }
    }
    return dp[n-1][tar];
}

int countPartitions(int n, int d, vector<int> &arr) {
   int tsum = 0;
    for(auto x:arr){tsum+=x;}
    if(tsum-d<0||(tsum-d)%2){return 0;}
    return  findways(arr,(tsum-d)/2);
}























